version: 0.2

phases:
  install:
    runtime-versions:
      python: 3.8
    commands:
      - echo Installing minimal dependencies
      - pip install awscli
  
  pre_build:
    commands:
      - echo Setting up ECR variables
      - ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
      - ECR_REPOSITORY_NAME="gan-text-to-image-dev-repository"
      - ECR_REPOSITORY_URI="${ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${ECR_REPOSITORY_NAME}"
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
      - echo "Full image name: $ECR_REPOSITORY_URI:$IMAGE_TAG"
      # Try to create repository (or continue if it exists)
      - aws ecr create-repository --repository-name ${ECR_REPOSITORY_NAME} || echo "Repository may already exist"
      # Login to ECR
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin ${ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com
      
  build:
    commands:
      - echo Creating minimal required files
      - mkdir -p scripts
      - echo "print('Placeholder')" > train.py
      - echo "def model_fn(model_dir): return {}" > inference.py
      - echo "print('Placeholder')" > scripts/start_training_job.py
      - echo "boto3>=1.20.0" > requirements.txt
      - echo Building Docker image
      - docker build -t $ECR_REPOSITORY_URI:$IMAGE_TAG .
      - docker tag $ECR_REPOSITORY_URI:$IMAGE_TAG $ECR_REPOSITORY_URI:latest
  
  post_build:
    commands:
      - echo Pushing to ECR
      - docker push $ECR_REPOSITORY_URI:$IMAGE_TAG
      - docker push $ECR_REPOSITORY_URI:latest
      - echo "Image successfully pushed to: $ECR_REPOSITORY_URI:$IMAGE_TAG"
      - echo "{\"ECRImageURI\": \"${ECR_REPOSITORY_URI}:${IMAGE_TAG}\"}" > build_output.json

artifacts:
  files:
    - build_output.json
  discard-paths: no